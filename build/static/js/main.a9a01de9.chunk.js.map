{"version":3,"sources":["components/header/locale.js","store/user/selectors.js","app/auth.js","containers/withLoginControl/withLoginControl.js","components/loginButton/loginButton.js","components/labelWithIcon/labelWithIcon.js","components/headerUserWidget/headerUserWidget.js","containers/headerUserWidget/headerUserWidget.js","components/header/header.js","store/mainMenu/actions.js","containers/header/header.js","store/user/actions.js","containers/auth/auth.js","store/mainMenu/selectors.js","components/navLinkListItem/navLinkListItem.js","components/mainMenuUserWidget/mainMenuUserWidget.js","containers/mainMenuUserWidget/mainMenuUserWidget.js","components/mainMenu/mainMenu.js","constants.js","components/carousel/carousel.js","components/tags/tags.js","components/campaignDescription/campaignDescription.js","components/goal/goal.js","components/reward/reward.js","components/rewards/rewards.js","components/comments/comments.js","components/news/news.js","components/rating/rating.js","components/boxWithIconButton/boxWithIconButton.js","components/boxWithEditIconButton/boxWithEditIconButton.js","components/boxWithApplyIconButton/boxWithApplyIconButton.js","components/editableLabel/editableLabel.js","components/campaign/campaign.js","services/campaign.js","store/campaign/reducer.js","containers/campaign/campaign.js","ruRU.js","enUS.js","store/mainMenu/reducer.js","store/user/reducer.js","store/editCampaign/reducer.js","store/locale/reducer.js","store/configure.js","app/locale.js","components/markdownEditor/markdownEditor.js","shareLocale.js","components/selectLocale/selectLocale.js","components/textFieldWithSelectLocale/textFieldWithSelectLocale.js","components/imageUpload/imageUpload.js","components/editGoal/editGoal.js","components/mediaContentImageForm/mediaContentImageForm.js","components/mediaContentVideoForm/mediaContentVideoForm.js","components/inputWithIncrementButtons/inputWithIncrementButtons.js","components/mediaContentForm/mediaContentForm.js","components/mediaContentList/mediaContentList.js","components/editMediaContent/editMediaContent.js","components/inputReward/inputReward.js","components/editRewardList/editRewardList.js","components/editRewards/editRewards.js","components/editCampaign/editCampaign.js","containers/editCampaign/editCampaign.js","App.js","serviceWorker.js","index.js"],"names":["obj","ruRU","pageName","main","campaings","registration","enUS","isAuthenticated","state","user","name","auth0","Auth0Client","domain","client_id","redirect_uri","window","location","host","mapStateToProps","userSelectors","withLoginControl","Component","connect","dispatch","props","handleLogout","useCallback","a","logout","onLogout","buttonsText","signIn","signUp","LoginButton","locale","className","localeSet","Box","classnames","onClick","loginWithRedirect","aria-label","useStyles","makeStyles","iconWrapper","marginRight","ProfileItemContent","icon","text","classes","root","label","labelWrapper","styles","Grid","container","wrap","item","Typography","locales","theme","button","color","palette","primary","contrastText","menuUsernameText","marginLeft","UserWidget","onProfile","useState","anchorEl","setAnchorEl","e","currentTarget","open","Boolean","onClose","MenuItem","Button","menuButton","flexGrow","flexShrink","Header","onMenuButtonClick","localeSets","AppBar","position","Toolbar","IconButton","variant","Hidden","xsDown","toggleMenu","createAction","login","id","payload","history","useHistory","useEffect","handleRedirectCallback","then","getUser","actions","sub","push","mainMenuIsOpen","mainMenu","NavLinkListItem","to","Icon","ListItem","component","NavLink","ListItemIcon","ListItemText","profile","boxShadow","MainMenuUserWidget","ExpansionPanel","square","ExpansionPanelSummary","ExpansionPanelDetails","List","width","MainMenuUserWidgetComponent","page","surface","maxWidth","closeButton","MainMenu","isOpen","Drawer","anchor","Divider","smUp","HomeIcon","CampaingsIcon","CAMPAING_TYPES","MEDIA_CONTENT","type","src","GOAL_END_TIME","Date","UTC","DESCRIPTION","REWARDS","description","cost","useStyle","top","height","backgroundColor","border","outline","right","left","wrapper","image","objectFit","ChooseComponent","imageClass","hasMasterSpinner","url","SlideComponent","Carousel","value","naturalSlideWidth","naturalSlideHeight","totalSlides","length","infinite","map","elem","key","Tags","marginTop","CampaignDescription","source","loc","format","endDate","goal","progressRoot","borderRadius","Goal","date","current","direction","spacing","justify","alignItems","fullWidth","Intl","DateTimeFormat","RelativeTimeFormat","Math","trunc","now","padding","onClickButton","Card","xs","RewardWrapper","Rewards","Comments","News","userRatingStar","average","onChange","Rating","iconFilled","undefined","iconHover","precision","_","onButtonClick","children","Label","LabelWithEditIcon","Edit","TextField","multiline","event","target","EditableLabel","canEdit","mode","Error","Campaign","labelMode","onToggleLabelMode","onLabelChange","rating","onRatingChange","media","goalSum","goalEndDate","goalCurrent","rewards","sm","getCampaignData","userRating","averageRating","syncLabel","initPage","createAsyncThunk","service","thunkAPI","selectors","getState","dataSlice","createSlice","initialState","reducers","setLabel","action","setUserRating","setMedia","extraReducers","fulfilled","uiSlice","syncStatus","error","loading","setLabelMode","toggleLabelMode","pending","rejected","campaignSelector","campaign","dataSelector","createSelector","data","uiSelector","ui","labelValueSelector","userRatingSelector","averageRatingSelector","mediaSelector","goalSelector","goalSumSelector","goalCurrentSelector","goalEndDateSelector","descriptionSelector","rewardsSelector","labelUiSelector","labelModeSelector","labelSyncStatusSelector","labelSyncErrorSelector","labelSyncStatus","labelSyncError","combineReducers","reducer","handleToggleLabelMode","handleLabelChange","handleRatingChange","CAMPAING_TYPES_NAME","menu","createReducer","userReducer","nameLocale","campaignType","descriptionLocale","avatar","goalFinishDate","mediaContent","newElem","elems","elemsOrder","rewardOrder","setName","setCampaignType","setNameLocale","setDescriptionLocale","setDescription","setAvatar","setGoalFinishDate","setGoalSum","test","setMediaContentNewElemType","setMediaContentNewElemUrl","setMediaContentNewElemPosition","maxLen","addMediaContent","slice","clearMediaContentNewElem","removeMediaContent","forEach","cur","i","changeMediaContentPosition","oldPosition","buf","newPosition","reqUrl","setRewardsLocale","setRewardsNewElemName","setRewardsNewElemDescription","setRewardsNewElemCost","addReward","changeRewardPosition","buff","order","removeReward","findIndex","editReward","reward","editCampaign","nameSelector","campaignTypeSelector","nameLocaleSelector","descriptionLocaleSelector","avatarSelector","goalFinishDateSelector","mediaContentSelector","mediaContentNewElemSelector","content","mediaContentNewElemTypeSelector","mediaContentNewElemUrlSelector","mediaContentNewElemPositionSelector","mediaContentElemsSelector","mediaContentElemsOrderSelector","mediaContentNewElemType","mediaContentNewElemUrl","mediaContentNewElemPosition","mediaContentElems","mediaContentElemsOrder","rewardsNewElem","rewardsLocale","setLocale","store","configureStore","mainMenuReducer","campaignReducer","editCampaignReducer","localeReducer","middleware","getDefaultMiddleware","thunk","useLocale","handleChange","newLocale","unsubscribe","subscribe","options","toolbar","LOCALE_NAME","Select","Object","keys","onTextChange","onLocaleChange","nameText","textLabel","registerPlugin","ImagePreviewPlugin","file","onUpdate","allowMultiple","files","costLabel","dateLabel","sum","onSumChange","onDateChange","DatePicker","light","video","mediaContentToValue","TabContent","rest","onChangeType","onChangeUrl","onChangePosition","onAdd","Tabs","valueToMediaContent","centered","Tab","Container","card","delete","Image","alt","Video","Elem","onDelete","valueOrder","newElemType","onChangeNewElemType","newElemUrl","onChangeNewElemUrl","newElemPosition","onChangeNewElemPosition","add","onEdit","handleChangePosition","onChangeNewElem","onChangeLocale","header","campaignTypes","CAMPAING_TYPES_RU","campaignTypeLabel","descriptionLabel","avatarLabel","goalLabel","mediaContentLabel","applyButton","cancelButton","CAMPAING_TYPES_EN","marginBottom","onChangeRewardsNewElem","onChangeRewardsLocale","onChangeRewardPosition","onDeleteReward","onEditReward","onApply","onCancel","FormControl","InputLabel","htmlFor","cariant","cType","act","mainContent","menuIsOpen","getTokenSilently","catch","err","console","log","exact","path","hostname","match","ReactDOM","render","StrictMode","utils","Moment","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.a9a01de9.chunk.js","sourcesContent":["export const enUS = {\n    pageName: {\n        main: 'Main',\n        campaings: 'Campaings',\n        registration: 'Sign In'\n    }\n}\n\nexport const ruRU = {\n    pageName: {\n        main: 'Главная',\n        campaings: 'Кампании',\n        registration: 'Регистрация',\n    }\n}\n\nconst obj = {\n    ruRU: ruRU,\n    enUS: enUS,\n}\n\nexport default obj;","export function isAuthenticated(state) {\n    return state.user.isAuthenticated;\n}\n\nexport function name(state) {\n    return state.user.name;\n}\n\nexport function id(state) {\n    return state.user.id;\n}","import { Auth0Client } from '@auth0/auth0-spa-js';\n\nconst auth0 = new Auth0Client({\n    domain: 'dev-mzlq67dx.eu.auth0.com',\n    client_id: 'fktoNOjdSNjZOBuKCQh1AaQ4JHhxmu03',\n    redirect_uri: `http://${window.location.host}/auth`,\n});\n\nexport default auth0;","import React, { useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport * as userSelectors from '../../store/user/selectors'\nimport auth0 from '../../app/auth';\n\nfunction mapStateToProps(state) {\n    return {\n        isAuthenticated: userSelectors.isAuthenticated(state),\n        name: userSelectors.name(state),\n    }\n}\n\nconst withLoginControl = (Component) => {\n    return connect(mapStateToProps)(({\n        isAuthenticated,\n        name,\n        dispatch,\n        ...props\n    }) => {\n        const handleLogout = useCallback(async () => {\n            await auth0.logout();\n        }, []);\n\n        return (\n            <Component\n                onLogout={handleLogout}\n                isAuthenticated={isAuthenticated}\n                name={name}\n                dispatch={dispatch}\n                {...props}\n            />\n        )\n    })\n}\n\nexport default withLoginControl;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport auth0 from '../../app/auth';\nimport classnames from 'classnames';\n\nconst buttonsText = {\n    ruRU: {\n        signIn: 'Войти',\n        signUp: 'Регистрация',\n    },\n    enUS: {\n        signIn: 'Sign In',\n        signUp: 'Sign Up',\n    },\n}\n\nexport default function LoginButton({\n    locale = 'enUS',\n    className,\n}) {\n    const localeSet = buttonsText[locale];\n\n    return (\n        <Box>\n            <Button \n                className={classnames(className)}\n                onClick={async () => {\n                    await auth0.loginWithRedirect();\n                }}\n                aria-label='sign in'\n            >\n                {localeSet.signIn}\n            </Button>\n        </Box>\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles({\n    iconWrapper: {\n        marginRight: '0.5em',\n    },\n});\n\nexport default function ProfileItemContent({\n    icon,\n    text,\n    classes = { root: '', iconWrapper: '', label: '', labelWrapper: '' },\n}) {\n    const styles = useStyles();\n\n    return (\n        <Grid \n            container \n            className={classnames(classes.root)}\n            wrap='nowrap'\n        >\n            <Grid \n                item\n                className={classnames(styles.iconWrapper, classes.iconWrapper)}\n            >\n                {icon}\n            </Grid>\n            <Grid \n                item\n                className={classnames(classes.labelWrapper)}\n            >\n                <Typography className={classnames(classes.label)}>\n                    {text}\n                </Typography>\n            </Grid>\n        </Grid>\n    )\n}","import React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AccountIcon from '@material-ui/icons/AccountBox';\nimport ExitIcon from '@material-ui/icons/ExitToApp';\nimport Typography from '@material-ui/core/Typography';\nimport LabelWithIcon from '../labelWithIcon/labelWithIcon';\n\nconst locales = {\n    ruRU: {\n        logout: 'Выйти',\n    },\n    enUS: {\n        logout: 'Logout',\n    }\n}\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        color: theme.palette.primary.contrastText,\n    },\n    menuUsernameText: {\n        marginLeft: '0.5em',\n    }\n}));\n\nexport default function UserWidget({\n    locale = 'enUS',\n    name,\n    onProfile,\n    onLogout,\n}) {\n    const classes = useStyles();\n    const [ anchorEl, setAnchorEl ] = useState(null);\n    const localeSet = locales[locale];\n\n    return (\n        <Box>\n            <Button \n                className={classes.button}\n                onClick={e => setAnchorEl(e.currentTarget)}\n            >\n                {name}\n            </Button>\n            <Menu \n                open={Boolean(anchorEl)} \n                anchorEl={anchorEl}\n                onClose={() => setAnchorEl(null)}\n            >\n                <MenuItem onClick={onProfile}>\n                    <LabelWithIcon \n                        icon={<AccountIcon/>}\n                        text={name}\n                    />\n                </MenuItem>\n                <MenuItem onClick={onLogout}>\n                    <ExitIcon />\n                    <Typography className={classes.menuUsernameText}>\n                        {localeSet.logout}\n                    </Typography>\n                </MenuItem>\n            </Menu>\n        </Box>\n    )\n}","import React from 'react';\nimport withLoginControl from '../withLoginControl/withLoginControl'\nimport LoginButton from '../../components/loginButton/loginButton';\nimport UserWidget from '../../components/headerUserWidget/headerUserWidget';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        color: theme.palette.primary.contrastText,\n    }\n}));\n\nconst Button = (props) => {\n    const classes = useStyles();\n\n    return <LoginButton className={classes.button} {...props} />\n}\n\nconst HeaderUserWidget = ({\n    isAuthenticated,\n    name,\n    onLogout,\n}) => {\n    const Component = isAuthenticated ? UserWidget : Button;\n\n    return <Component name={name} onLogout={onLogout} />\n}\n\nexport default withLoginControl(HeaderUserWidget);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nimport localeSets from './locale';\nimport HeaderUserWidget from '../../containers/headerUserWidget/headerUserWidget';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        color: theme.palette.primary.contrastText,\n    },\n    pageName: {\n        marginLeft: '1em',\n        flexGrow: '1',\n        flexShrink: '1',\n    },\n}));\n\nexport default function Header({\n    locale = 'enUS',\n    onMenuButtonClick,\n    pageName,\n}) {\n    const styles = useStyles();\n    const localeSet = localeSets[locale];\n\n    return (\n        <AppBar position='static'>\n            <Toolbar>\n                <IconButton\n                    className={styles.menuButton}\n                    aria-label='menu'\n                    onClick={onMenuButtonClick}\n                >\n                    <MenuIcon />\n                </IconButton>\n                <Typography\n                    className={styles.pageName}\n                    variant='h6'\n                >\n                    {localeSet.pageName[pageName]}\n                </Typography>\n                <Hidden xsDown>\n                    <HeaderUserWidget />\n                </Hidden>\n            </Toolbar>\n        </AppBar>\n    )\n}","import { createAction } from '@reduxjs/toolkit';\n\nexport const toggleMenu = createAction('menu/toggle');","import React from 'react';\nimport HeaderComponent from '../../components/header/header';\nimport { connect } from 'react-redux';\nimport { toggleMenu } from '../../store/mainMenu/actions';\n\nfunction Header({\n    pageName,\n    dispatch,\n}) {\n    return (\n        <HeaderComponent\n            pageName={pageName}\n            onMenuButtonClick={() => dispatch(toggleMenu())}\n        />\n    )\n}\n\nexport default connect()(Header);","import { createAction } from '@reduxjs/toolkit';\n\nexport const login = createAction('user/login', (id, name) => {\n    return {\n        payload: {\n            id: id,\n            name: name,\n        }\n    }\n});","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport auth0 from '../../app/auth';\nimport * as actions from '../../store/user/actions';\nimport { useHistory } from 'react-router-dom';\n\nconst Auth = ({\n    dispatch,\n}) => {\n    const history = useHistory();\n\n    useEffect(() => {\n        auth0.handleRedirectCallback().then(() => {\n            auth0.getUser().then(user => {\n                dispatch(actions.login(user.sub, user.name));\n                history.push('/');\n            });\n        });\n    });\n\n    return <div></div>\n}\n\nexport default connect()(Auth);","export function mainMenuIsOpen(state) {\n    return state.mainMenu;\n}","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { NavLink } from 'react-router-dom';\n\nexport default function NavLinkListItem({\n    to,\n    icon,\n    text,\n}) {\n    const Icon = icon;\n\n    return (\n        <ListItem button component={NavLink} to={to}>\n            <ListItemIcon>\n                <Icon />\n            </ListItemIcon>\n            <ListItemText>\n                {text}\n            </ListItemText>\n        </ListItem>\n    );\n}","import React from 'react';\nimport LabelWithIcon from '../labelWithIcon/labelWithIcon';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AccountIcon from '@material-ui/icons/AccountBox';\nimport LogoutIcon from '@material-ui/icons/ExitToApp';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst locales = {\n    ruRU: {\n        profile: 'Профиль',\n        logout: 'Выйти',\n    },\n    enUS: {\n        profile: 'Profile',\n        logout: 'Logout',\n    }\n}\n\nconst useStyles = makeStyles({\n    root: {\n        boxShadow: 'none',\n    }\n});\n\nexport default function MainMenuUserWidget({\n    name,\n    onLogout,\n    locale = 'enUS'\n}) {\n    const localeSet = locales[locale];\n    const classes = useStyles();\n\n    return (\n        <Box>\n            <ExpansionPanel \n                square={true}\n                classes={{root: classes.root}}\n            >\n                <ExpansionPanelSummary>\n                    <Typography>\n                        {name}\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <List>\n                        <ListItem button>\n                            <LabelWithIcon\n                                icon={<AccountIcon />}\n                                text={localeSet.profile}\n                            />\n                        </ListItem>\n                        <ListItem \n                            button\n                            onClick={onLogout}\n                        >\n                            <LabelWithIcon\n                                icon={<LogoutIcon />}\n                                text={localeSet.logout}\n                            />\n                        </ListItem>\n                    </List>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Box>\n    );\n}","import React from 'react';\nimport MainMenuUserWidgetComponent from '../../components/mainMenuUserWidget/mainMenuUserWidget';\nimport withLoginControl from '../withLoginControl/withLoginControl';\nimport LoginButton from '../../components/loginButton/loginButton';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    button: {\n        width: '100%',\n    }\n});\n\nconst Button = (props) => {\n    const classes = useStyles();\n\n    return <LoginButton className={classes.button} {...props} />\n}\n\nconst MainMenuUserWidget = ({\n    name,\n    isAuthenticated,\n    onLogout,\n}) => {\n    const Component = isAuthenticated ? MainMenuUserWidgetComponent : Button;\n\n    return (\n        <Component\n            name={name}\n            onLogout={onLogout}\n        />\n    );\n}\n\nexport default withLoginControl(MainMenuUserWidget);","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ArrowLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport NavLinkListItem from '../navLinkListItem/navLinkListItem'\nimport HomeIcon from '@material-ui/icons/Home';\nimport CampaingsIcon from '@material-ui/icons/LocalLibrary';\nimport MainMenuUserWidget from '../../containers/mainMenuUserWidget/mainMenuUserWidget';\nimport Hidden from '@material-ui/core/Hidden';\n\nconst locales = {\n    ruRU: {\n        page: {\n            main: 'Главная',\n            campaings: 'Компании',\n        }\n    },\n    enUS: {\n        page: {\n            main: 'Main',\n            campaings: 'Campaings',\n        }\n    },\n}\n\nconst useStyles = makeStyles({\n    surface: {\n        width: '100vw',\n        maxWidth: '360px'\n    },\n    closeButton: {\n        width: '100%',\n    }\n});\n\nexport default function MainMenu({\n    locale = 'enUS',\n    isOpen,\n    onClose,\n}) {\n    const classes = useStyles();\n    const localeSet = locales[locale];\n\n    return (\n        <Drawer\n            anchor='left'\n            open={isOpen}\n            onClose={onClose}\n        >\n\n            <List\n                className={classes.surface}\n                component='nav'\n            >\n                <Button\n                    className={classes.closeButton}\n                    onClick={onClose}\n                >\n                    <ArrowLeftIcon />\n                </Button>\n                <Divider />\n                <Hidden smUp>\n                    <MainMenuUserWidget />\n                    <Divider />\n                </Hidden>\n                <NavLinkListItem\n                    to='/'\n                    icon={HomeIcon}\n                    text={localeSet.page.main}\n                />\n                <NavLinkListItem\n                    to='/'\n                    icon={CampaingsIcon}\n                    text={localeSet.page.campaings}\n                />\n            </List>\n        </Drawer>\n    )\n}","export const LOCALE_RU = 'ruRU';\nexport const LOCALE_EN = 'enUS';\nexport const LOCALE_DEFAULT = LOCALE_EN;\n\nexport const MODE_EDIT = 'edit';\nexport const MODE_USE = 'use';\n\nexport const LOADING_IDLE = 'idle';\nexport const LOADING_PENDING = 'pending';\n\nexport const SYNC_IDLE = 'idle';\nexport const SYNC_PENDING = 'pending';\nexport const SYNC_COMPLETE = 'complete';\nexport const SYNC_REJECTED = 'rejected';\n\nexport const MEDIA_IMAGE = 'image';\nexport const MEDIA_VIDEO = 'video';\n\nexport const EDIT_CAMPAING_CREATE = 'create';\nexport const EDIT_CAMPAING_EDIT = 'edit';\n\nexport const CAMPAING_TYPES = {\n    EDUCATION: 'education',\n    SPORT: 'sport',\n    HEALTH: 'health',\n};\n\n/*------------------------Temp----------------------------------*/\nexport const MEDIA_CONTENT = [\n    {\n        type: MEDIA_IMAGE,\n        src: 'https://icatcare.org/app/uploads/2018/07/Thinking-of-getting-a-cat.png',\n    }, {\n        type: MEDIA_VIDEO,\n        src: 'https://www.youtube.com/watch?v=yRLjfNIipuo',\n    }, {\n        type: MEDIA_IMAGE,\n        src: 'https://zjf683hopnivfq5d12xaooxr-wpengine.netdna-ssl.com/wp-content/uploads/2020/02/GettyImages-1199242002-1-scaled.jpg',\n    },\n];\nexport const CAMPAING_LABEL = '*label*';\nexport const USER_RATING = 0;\nexport const AVERAGE_RATING = 2.5;\nexport const GOAL_END_TIME = Date.UTC(2020, 6, 6);\nexport const GOAL_CURRENT = 200;\nexport const GOAL_GOAL = 322;\nexport const DESCRIPTION = `\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur vestibulum pharetra risus, quis fringilla metus blandit eu. Nam varius, tortor sed interdum rhoncus, diam elit dapibus dui, at mattis purus tortor eu magna. Donec et leo placerat, posuere sem sed, imperdiet erat. Cras vitae metus non ipsum imperdiet rhoncus vitae a diam. Aenean consectetur justo magna, ac tincidunt enim imperdiet vitae. Praesent id ante ut lorem pellentesque convallis. Aliquam tristique mollis massa. Pellentesque ipsum augue, ornare sit amet ipsum ac, tempus luctus dui. Fusce cursus urna nisl, nec auctor dolor sagittis ac. Etiam vehicula nec orci ut posuere. Vivamus eu gravida felis. Quisque at egestas turpis. Nullam ut luctus nulla. Nullam pretium ut sem in molestie. Nullam cursus orci at facilisis consectetur.\n\nUt eget porta lacus. Suspendisse potenti. Fusce vitae urna vel lorem consectetur laoreet. Duis ullamcorper nisi vitae purus posuere, eu consequat diam varius. Suspendisse metus est, consectetur in dignissim a, gravida nec eros. Nam hendrerit turpis orci, luctus fermentum leo rhoncus in. Nam aliquet erat ante, commodo convallis enim blandit in. Mauris sollicitudin libero sit amet mi vehicula, vitae finibus libero laoreet. Sed venenatis arcu eget tortor accumsan, a mollis velit pulvinar. Proin nec rhoncus massa. Donec semper fermentum suscipit. Maecenas sodales nulla vel eros eleifend cursus. Donec fringilla sem a dapibus vulputate.\n\nDuis eu ligula ut enim sagittis varius vitae eu magna. Aenean suscipit, lorem sed viverra placerat, quam neque accumsan ante, quis mollis neque lectus et risus. Vivamus orci magna, viverra sed eros eu, porttitor ultrices nibh. Fusce dapibus orci in nisl rhoncus malesuada. Cras at ultricies enim. Vivamus cursus lorem et urna dignissim, venenatis bibendum risus lobortis. Donec rutrum maximus tempus. Sed vel porta elit.\n\nEtiam sodales erat eget est mollis, vitae tempus quam finibus. In diam quam, lacinia vitae dignissim volutpat, fringilla at lacus. Duis vitae sollicitudin leo, nec gravida urna. Nulla id augue et est gravida congue. Nulla faucibus molestie odio. Curabitur aliquam et dui vel vulputate. Pellentesque mattis sapien eget pharetra ultrices. Maecenas metus est, imperdiet vitae tortor ac, tincidunt efficitur orci. Pellentesque suscipit turpis risus, vel mollis arcu sodales ac. Sed dictum, lectus laoreet vestibulum finibus, quam orci luctus sem, id feugiat quam purus vel dui.\n\nNulla lobortis eu erat id tempor. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque porttitor elit ut felis bibendum blandit. Vivamus sed interdum felis. Fusce in massa dolor. Proin commodo sapien vel suscipit faucibus. Donec sed interdum metus. Phasellus malesuada hendrerit lorem, vitae mollis neque placerat ac. Cras sit amet sapien tempus, tempus diam sed, commodo elit. Proin mattis dui quam, at malesuada turpis blandit ut. Pellentesque sagittis sem malesuada cursus blandit. Aliquam feugiat suscipit elit ut luctus. Vivamus ac justo sed ipsum semper auctor.\n`;\nexport const REWARDS = [\n    {\n        label: 'Starter',\n        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Maecenas rhoncus cursus tortor in luctus. Morbi pellentesque augue sed luctus sollicitudin. Sed faucibus egestas posuere. Aenean efficitur finibus dapibus. Donec pulvinar sed ex vel feugiat. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Fusce venenatis tempor nulla et egestas.',\n        cost: 100,\n    }, {\n        label: 'Standart',\n        description: 'Mauris et ex sit amet purus ultricies cursus. Suspendisse potenti. Nullam sed vestibulum magna. Maecenas feugiat justo eu diam vestibulum, et tempor nunc lacinia. Aliquam imperdiet felis ut purus porta commodo id a leo. Aliquam at sodales tortor, et placerat felis.',\n        cost: 200,\n    }, {\n        label: 'Premium',\n        description: 'Etiam convallis arcu et molestie ullamcorper. Vivamus molestie pulvinar justo sit amet gravida. Duis vulputate nunc in volutpat pulvinar. Phasellus eu magna mollis, faucibus risus ac, pharetra dolor. Pellentesque quam dolor, interdum gravida sapien vitae, viverra gravida arcu. Pellentesque ac est ac nisl porttitor rutrum.',\n        cost: 300,\n    },\n];","import React from 'react';\nimport {\n    CarouselProvider,\n    Slider,\n    Slide,\n    ButtonBack,\n    ButtonNext,\n    Image,\n} from 'pure-react-carousel';\nimport 'pure-react-carousel/dist/react-carousel.es.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport RightIcon from '@material-ui/icons/ChevronRight';\nimport LeftIcon from '@material-ui/icons/ChevronLeft';\nimport Box from '@material-ui/core/Box';\nimport classnames from 'classnames'\nimport ReactPlayer from 'react-player';\nimport { MEDIA_IMAGE, MEDIA_VIDEO } from '../../constants';\n\nconst useStyle = makeStyles({\n    button: {\n        position: 'absolute',\n        top: '0',\n        height: '100%',\n        backgroundColor: 'transparent',\n        border: 'none',\n        outline: 'none',\n        '&:hover': {\n            backgroundColor: 'rgba(0,0,0,0.2)',\n        },\n        '&:active': {\n            backgroundColor: 'rgba(0,0,0,0.4)'\n        },\n    },\n    right: {\n        right: '0',\n    },\n    left: {\n        left: '0',\n    },\n    wrapper: {\n        position: 'relative',\n        width: '100%',\n    },\n    image: {\n        objectFit: 'contain',\n    },\n    icon: {\n        color: 'black',\n    }\n});\n\nfunction ImageWrapper({\n    src\n}) {\n    const imageClass = useStyle().image;\n\n    return (\n        <Image \n            className={imageClass}\n            src={src} \n            hasMasterSpinner={true}\n        />\n    );\n}\n\nfunction VideoWrapper({\n    src\n}) {\n    return (\n        <ReactPlayer \n            url={src}\n            width='100%'\n            height='100%'\n        />\n    );\n}\n\nconst ChooseComponent = {\n    [MEDIA_IMAGE]: ImageWrapper,\n    [MEDIA_VIDEO]: VideoWrapper,\n}\n\nfunction SlideComponent({\n    type,\n    src,\n}) {\n    const Component = ChooseComponent[type];\n\n    return (\n        <Slide>\n            <Component src={src} />\n        </Slide>\n    );\n}\n\nexport default function Carousel({\n    value,\n}) {\n    const classes = useStyle();\n\n    return (\n        <Box className={classes.wrapper}>\n            <CarouselProvider\n                naturalSlideWidth={2}\n                naturalSlideHeight={1}\n                totalSlides={value.length}\n                infinite={true}\n            >\n                <Slider>\n                    {value.map((elem) => <SlideComponent key={elem.src} {...elem} />)}\n                </Slider>\n                <ButtonBack className={classnames(classes.button, classes.left)}>\n                    <LeftIcon className={classes.icon} />\n                </ButtonBack>\n                <ButtonNext className={classnames(classes.button, classes.right)}>\n                    <RightIcon className={classes.icon} />\n                </ButtonNext>\n            </CarouselProvider>\n        </Box>\n    );\n}","import React from 'react';\n\nexport default function Tags() {\n    return <div></div>\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Markdown from 'react-markdown';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    }\n});\n\nconst locales = {\n    ruRU: {\n        description: 'Описание',\n    },\n    enUS: {\n        description: 'Description',\n    },\n}\n\nexport default function CampaignDescription({\n    locale = 'enUS',\n    value,\n}) {\n    const localeSet = locales[locale];\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.root}>\n            <Typography variant='h4'>\n                {localeSet.description}\n            </Typography>\n            <Markdown source={value}/>\n        </Box>\n    );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Progress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst locales = {\n    ruRU: {\n        loc: 'ru-RU',\n        format: 'DD.MM.YYYY',\n        endDate: 'Дата окончания',\n        left: 'Осталось',\n        goal: 'Цель',\n    },\n    enUS: {\n        loc: 'en-US',\n        format: 'MM.DD.YYYY',\n        endDate: 'Expiration',\n        left: 'Left',\n        goal: 'Goal',\n    },\n}\n\nconst useStyles = makeStyles({\n    progressRoot: {\n        height: '0.4em',\n        borderRadius: '3px',\n    }\n});\n\nexport default function Goal({\n    locale = 'enUS',\n    date,\n    goal,\n    current,\n}) {\n    const classes = useStyles();\n    const localeSet = locales[locale];\n\n    return (\n        <Grid\n            container\n            direction='column'\n            spacing={3}\n        >\n            <Grid\n                item\n                container\n                justify='space-between'\n                alignItems='center'\n            >\n                <Grid item>\n                    <Typography variant='h3'>{localeSet.goal}</Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h3'>{goal}</Typography>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Progress\n                    classes={{ root: classes.progressRoot }}\n                    variant='determinate'\n                    value={(current / goal) * 100}\n                />\n                <Grid\n                    item\n                    container\n                    justify='flex-end'\n                    direction='row'\n                    fullWidth\n                >\n                    <Grid item>\n                        <Typography variant='h6'>{current} из {goal}</Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Grid\n                    container\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    <Grid item>\n                        {localeSet.endDate}\n                    </Grid>\n                    <Grid item>\n                        <Typography variant='h6' component='span'>\n                            {Intl.DateTimeFormat(localeSet.loc).format(date)}\n                        </Typography>\n                    </Grid>\n                </Grid>\n                <Grid\n                    container\n                    justify='space-between'\n                    alignItems='center'\n                >\n                    <Grid item>\n                        {localeSet.left}\n                    </Grid>\n                    <Grid item>\n                        <Typography variant='h6' component='span'>\n                            {(new Intl.RelativeTimeFormat(localeSet.loc))\n                                .format(\n                                    Math.trunc((date - Date.now())/1000/60/60/24), 'day')}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Markdown from 'react-markdown'\n\nconst useStyles = makeStyles({\n    root: {\n        padding: '0.5em',\n    },\n})\n\nexport default function ({\n    onClickButton,\n    label,\n    description,\n    cost,\n}) {\n    const classes = useStyles()\n\n    return (\n        <Card className={classes.root}>\n            <Grid\n                container\n                spacing={1}\n                alignItems='center'\n            >\n                <Grid\n                    item\n                    xs={12}\n                    container\n                    justify='space-around'\n                >\n                    <Grid item>\n                        <Typography variant='h6'>{label}</Typography>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                >\n                    <Markdown source={description} />\n                </Grid>\n                <Grid\n                    item\n                    xs={12}\n                >\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={onClickButton}\n                        fullWidth\n                    >\n                        {cost}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Card>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Reward from '../reward/reward';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    root: {\n        marginTop: '0.5em',\n    }\n});\n\nfunction RewardWrapper({\n    cost,\n    label,\n    description,\n    onClickButton,\n}) {\n    return (\n        <Grid\n            item\n            xs={12}\n        >\n            <Reward\n                cost={cost}\n                label={label}\n                description={description}\n                onClickButton={onClickButton}\n            />\n        </Grid>\n    );\n}\n\nexport default function Rewards({\n    value,\n    onClickButton,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Grid\n            container\n            alignItems='center'\n            spacing={2}\n            className={classes.root}\n        >\n            {value.map((elem) => {\n                return (\n                    <RewardWrapper key={elem.label} {...elem}/>\n                );\n            })}\n        </Grid>\n    );\n}","import React from 'react';\n\nexport default function Comments() {\n    return <div></div>\n}","import React from 'react';\n\nexport default function News() {\n    return <div></div>\n}","import React from 'react';\nimport Rating from '@material-ui/lab/Rating';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    userRatingStar: {\n        color: 'darkorange',\n    }\n})\n\nexport default function({\n    user,\n    average,\n    onChange,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Rating \n            classes={{\n                iconFilled: user ? classes.userRatingStar : undefined,\n                iconHover: classes.userRatingStar,\n            }}\n            precision={0.5}\n            value={user || average}\n            onChange={(_, value) => {\n                onChange(value);\n            }}\n        />\n    )\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport default function ({\n    onButtonClick,\n    icon,\n    children,\n}) {\n    return (\n        <Grid\n            container\n            direction='row-reverse'\n            justify='space-between'\n        >\n            <Grid item xs>\n                <IconButton onClick={onButtonClick}>\n                    {icon}\n                </IconButton>\n            </Grid>\n            <Grid item xs={11}>\n                {children}\n            </Grid>\n        </Grid>\n    )\n}\n","import React from 'react';\nimport Box from '../boxWithIconButton/boxWithIconButton';\nimport Edit from '@material-ui/icons/Edit';\n\nexport default function({\n    children, \n    onButtonClick,\n}) {\n    return (\n        <Box\n            icon={<Edit />}\n            onButtonClick={onButtonClick}\n        >\n            {children}\n        </Box>\n    )\n}","import React from 'react';\nimport Box from '../boxWithIconButton/boxWithIconButton';\nimport ApplyIcon from '@material-ui/icons/CheckCircle';\n\nexport default function({\n    children,\n    onButtonClick,\n}) {\n    return (\n        <Box\n            icon={<ApplyIcon />}\n            onButtonClick={onButtonClick}\n        >\n            {children}\n        </Box>\n    );\n}","import React from 'react';\nimport UseBox from '../boxWithEditIconButton/boxWithEditIconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport EditBox from '../boxWithApplyIconButton/boxWithApplyIconButton';\nimport { MODE_EDIT, MODE_USE } from '../../constants';\n\nfunction Label({\n    value,\n}) {\n    return (\n        <Typography variant='h4'>\n            {value}\n        </Typography>\n    );\n}\n\nfunction LabelWithEditIcon({\n    value,\n    onButtonClick,\n}) {\n    return (\n        <UseBox onButtonClick={onButtonClick}>\n            <Label value={value} />\n        </UseBox>\n    );\n}\n\nfunction Edit({\n    value,\n    onButtonClick,\n    onChange,\n}) {\n    return (\n        <EditBox onButtonClick={onButtonClick}>\n            <TextField\n                fullWidth\n                variant='outlined'\n                value={value}\n                multiline\n                onChange={event => onChange(event.target.value)}\n            />\n        </EditBox>\n    );\n}\n\nexport default function EditableLabel({\n    value,\n    onChange,\n    onButtonClick,\n    canEdit,\n    mode,\n}) {\n    let Component;\n    if (canEdit) {\n        switch (mode) {\n            default: throw Error('Wrong mode: '+mode);\n            case MODE_USE:\n                Component = LabelWithEditIcon;\n                break;\n            case MODE_EDIT:\n                Component = Edit;\n                break;\n        }\n    } else Component = Label;\n\n    return <Component\n        value={value}\n        onChange={onChange}\n        onButtonClick={onButtonClick}\n    />\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Carousel from '../carousel/carousel';\nimport Tags from '../tags/tags';\nimport CampaignDescription from '../campaignDescription/campaignDescription';\nimport Goal from '../goal/goal';\nimport Rewards from '../rewards/rewards';\nimport Comments from '../comments/comments';\nimport News from '../news/news';\nimport Rating from '../rating/rating';\nimport EditableLabel from '../editableLabel/editableLabel';\n\nexport default function Campaign({\n    label,\n    labelMode,\n    onToggleLabelMode,\n    onLabelChange,\n    canEdit,\n    rating,\n    onRatingChange,\n    media,\n    goalSum,\n    goalEndDate,\n    goalCurrent,\n    description,\n    rewards\n}) {\n    return (\n        <Grid\n            container\n            direction='column'\n        >\n            <Grid item>\n                <EditableLabel\n                    value={label}\n                    mode={labelMode}\n                    onButtonClick={onToggleLabelMode}\n                    onChange={onLabelChange}\n                    canEdit={canEdit}\n                />\n            </Grid>\n            <Grid item>\n                <Rating\n                    user={rating.user}\n                    average={rating.average}\n                    onChange={onRatingChange}\n                />\n            </Grid>\n            <Grid item>\n                <Tags />\n            </Grid>\n            <Grid\n                item\n                container\n                spacing={2}\n            >\n                <Grid item sm={8} xs={12}>\n                    <Carousel value={media} />\n                </Grid>\n                <Grid item sm={4} xs={12}>\n                    <Goal\n                        date={goalEndDate}\n                        goal={goalSum}\n                        current={goalCurrent}\n                    />\n                </Grid>\n            </Grid>\n            <Grid\n                item\n                container\n                spacing={2}\n            >\n                <Grid\n                    item\n                    sm={8}\n                    xs={12}\n                >\n                    <CampaignDescription value={description}/>\n                    <News />\n                </Grid>\n                <Grid \n                    item\n                    sm={4}\n                    xs={12}\n                >\n                    <Rewards value={rewards} />\n                </Grid>\n            </Grid>\n            <Grid item>\n                <Comments />\n            </Grid>\n        </Grid>\n    )\n}","import {\n    MEDIA_CONTENT,\n    USER_RATING,\n    AVERAGE_RATING,\n    CAMPAING_LABEL,\n    GOAL_CURRENT,\n    GOAL_END_TIME,\n    GOAL_GOAL,\n    DESCRIPTION,\n    REWARDS,\n} from '../constants';\n\nexport async function getCampaignData(id) {\n    return {\n        label: CAMPAING_LABEL,\n        userRating: USER_RATING,\n        averageRating: AVERAGE_RATING,\n        media: MEDIA_CONTENT,\n        goal: {\n            goal: GOAL_GOAL,\n            endDate: GOAL_END_TIME,\n            current: GOAL_CURRENT,\n        },\n        description: DESCRIPTION,\n        rewards: REWARDS,\n    }\n}\n\nexport async function syncLabel(label) {\n    return 'ok';\n}","import {\n    createSlice,\n    createAsyncThunk,\n    combineReducers,\n    createSelector,\n} from '@reduxjs/toolkit';\nimport * as service from '../../services/campaign';\nimport { \n    LOADING_PENDING, \n    LOADING_IDLE, \n    MODE_EDIT, \n    MODE_USE,\n    SYNC_IDLE,\n    SYNC_PENDING,\n    SYNC_REJECTED,\n    SYNC_COMPLETE,\n} from '../../constants';\n\nconst initPage = createAsyncThunk(\n    'campaign/initPage',\n    async (id) => {\n        return await service.getCampaignData(id);\n    },\n);\nconst syncLabel = createAsyncThunk(\n    'campaign/syncLabel',\n    async(_, thunkAPI) => {\n        return await service.syncLabel(selectors.label(thunkAPI.getState()));\n    }\n);\n\nconst dataSlice = createSlice({\n    name: 'campaign/data',\n    initialState: {\n        label: '',\n        averageRating: 0,\n        userRating: 0,\n        media: [],\n        goal: {\n            goal: 0,\n            current: 0,\n            endDate: Date.now(),\n        },\n        description: '',\n        rewards: [],\n    },\n    reducers: {\n        setLabel(state, action) {\n            state.label = action.payload;\n        },\n        setUserRating(state, action) {\n            state.userRating = action.payload;\n        },\n        setMedia(state, action) {\n            state.media = action.payload;\n        },\n    },\n    extraReducers: {\n        [initPage.fulfilled]: (state, action) => ({\n            ...action.payload,\n        }),\n    }\n});\n\nconst uiSlice = createSlice({\n    name: 'campaign/ui',\n    initialState: {\n        label: {\n            mode: MODE_USE,\n            syncStatus: SYNC_IDLE,\n            error: '',\n        },\n        canEdit: false,\n        loading: LOADING_IDLE,\n    },\n    reducers: {\n        setLabelMode(state, action) {\n            state.label.mode = action.payload;\n        },\n        toggleLabelMode(state, action) {\n            state.label.mode = (state.label.mode === MODE_EDIT) ? MODE_USE : MODE_EDIT;\n        }, \n    },\n    extraReducers: {\n        [initPage.pending]: (state, action) => { state.loading = LOADING_PENDING },\n        [initPage.fulfilled]: (state) => { state.loading = LOADING_IDLE },\n\n        [syncLabel.pending]: (state) => { state.label.syncStatus = SYNC_PENDING },\n        [syncLabel.rejected]: (state) => { state.label.syncStatus = SYNC_REJECTED },\n        [syncLabel.fulfilled]: (state) => { state.label.syncStatus = SYNC_COMPLETE },\n    }\n});\n\nexport const actions = {\n    setLabel: dataSlice.actions.setLabel,\n    setLabelMode: uiSlice.actions.setLabelMode,\n    toggleLabelMode: uiSlice.actions.toggleLabelMode,\n    setUserRating: dataSlice.actions.setUserRating,\n    initPage: initPage,\n    syncLabel: syncLabel,\n}\n\nconst campaignSelector = state => state.campaign;\nconst dataSelector = createSelector(\n    campaignSelector,\n    (state) => state.data,\n);\nconst uiSelector = createSelector(\n    campaignSelector,\n    (state) => state.ui,\n);\n\nconst labelValueSelector = createSelector(\n    dataSelector,\n    (data) => data.label,\n);\nconst userRatingSelector = createSelector(\n    dataSelector,\n    (data) => data.userRating,\n);\nconst averageRatingSelector = createSelector(\n    dataSelector,\n    (data) => data.averageRating,\n);\nconst mediaSelector = createSelector(\n    dataSelector,\n    (data) => data.media,\n);\nconst goalSelector = createSelector(\n    dataSelector,\n    (data) => data.goal,\n);\nconst goalSumSelector = createSelector(\n    goalSelector,\n    (goal) => goal.goal,\n);\nconst goalCurrentSelector = createSelector(\n    goalSelector,\n    (goal) => goal.current,\n);\nconst goalEndDateSelector = createSelector(\n    goalSelector,\n    (goal) => goal.endDate,\n);\nconst descriptionSelector = createSelector(\n    dataSelector,\n    (data) => data.description,\n);\nconst rewardsSelector = createSelector(\n    dataSelector,\n    (data) => data.rewards,\n);\n\nconst labelUiSelector = createSelector(\n    uiSelector,\n    (ui) => ui.label,\n);\nconst labelModeSelector = createSelector(\n    labelUiSelector,\n    (label) => label.mode,\n);\nconst labelSyncStatusSelector = createSelector(\n    labelUiSelector,\n    (label) => label.syncStatus,\n);\nconst labelSyncErrorSelector = createSelector(\n    labelUiSelector,\n    (label) => label.error,\n)\nconst canEditSelector = createSelector(\n    uiSelector,\n    (ui) => ui.canEdit,\n);\n\nexport const selectors = {\n    label: labelValueSelector,\n    labelMode: labelModeSelector,\n    canEdit: canEditSelector,\n    labelSyncStatus: labelSyncStatusSelector,\n    labelSyncError: labelSyncErrorSelector,\n    userRating: userRatingSelector,\n    averageRating: averageRatingSelector,\n    media: mediaSelector,\n    goalSum: goalSumSelector,\n    goalCurrent: goalCurrentSelector,\n    goalEndDate: goalEndDateSelector,\n    description: descriptionSelector,\n    rewards: rewardsSelector,\n}\n\nexport default combineReducers({\n    data: dataSlice.reducer,\n    ui: uiSlice.reducer\n});","import React, { useCallback, useEffect } from 'react';\nimport CampaignComponent from '../../components/campaign/campaign';\nimport { connect } from 'react-redux';\nimport { selectors, actions } from '../../store/campaign/reducer';\nimport { MODE_EDIT } from '../../constants';\n\nconst Campaign = ({\n    label,\n    labelMode,\n    canEdit,\n    userRating,\n    averageRating,\n    media,\n    dispatch,\n    goalSum,\n    goalCurrent,\n    goalEndDate,\n    description,\n    rewards,\n}) => {\n    const handleToggleLabelMode = useCallback(() => {\n        if (labelMode === MODE_EDIT) {\n            dispatch(actions.syncLabel());\n        }\n        dispatch(actions.toggleLabelMode());\n    }, [dispatch, labelMode]);\n\n    const handleLabelChange = useCallback((value) => {\n        dispatch(actions.setLabel(value));\n    }, [dispatch]);\n\n    const handleRatingChange = useCallback((value) => {\n        dispatch(actions.setUserRating(value));\n    }, [dispatch])\n\n    useEffect(() => { dispatch(actions.initPage()) }, [dispatch]);\n\n    return (\n        <CampaignComponent\n            label={label}\n            labelMode={labelMode}\n            onToggleLabelMode={handleToggleLabelMode}\n            canEdit={canEdit}\n            onLabelChange={handleLabelChange}\n            rating={{ user: userRating, average: averageRating }}\n            onRatingChange={handleRatingChange}\n            media={media}\n            goalSum={goalSum}\n            goalCurrent={goalCurrent}\n            goalEndDate={goalEndDate}\n            description={description}\n            rewards={rewards}\n        />\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        label: selectors.label(state),\n        labelMode: selectors.labelMode(state),\n        canEdit: selectors.canEdit(state),\n        userRating: selectors.userRating(state),\n        averageRating: selectors.averageRating(state),\n        media: selectors.media(state),\n        goalSum: selectors.goalSum(state),\n        goalCurrent: selectors.goalCurrent(state),\n        goalEndDate: selectors.goalEndDate(state),\n        description: selectors.description(state),\n        rewards: selectors.rewards(state),\n    }\n}\n\nexport default connect(mapStateToProps)(Campaign)","import { CAMPAING_TYPES as CAMPAING_TYPES_NAME } from './constants';\n\nexport const CAMPAING_TYPES = {\n    [CAMPAING_TYPES_NAME.EDUCATION]: 'Образование',\n    [CAMPAING_TYPES_NAME.HEALTH]: 'Здоровье',\n    [CAMPAING_TYPES_NAME.SPORT]: 'Спорт',\n};\n\nexport default {\n    CAMPAING_TYPES: CAMPAING_TYPES,\n}","import { CAMPAING_TYPES as CAMPAING_TYPES_NAME } from './constants';\n\nexport const CAMPAING_TYPES = {\n    [CAMPAING_TYPES_NAME.EDUCATION]: 'Education',\n    [CAMPAING_TYPES_NAME.HEALTH]: 'Health',\n    [CAMPAING_TYPES_NAME.SPORT]: 'Sport',\n};\n\nexport default {\n    CAMPAING_TYPES: CAMPAING_TYPES,\n}","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions.js';\n\nconst menu = createReducer(\n    false,\n    {\n        [actions.toggleMenu]: (state) => !state\n    },\n);\n\nexport default menu;","import { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst userReducer = createReducer(\n    {\n        isAuthenticated: false,\n        name: undefined,\n        id: undefined,\n\n    }, {\n        [actions.login]: (state, action) => {\n            return {\n                isAuthenticated: true,\n                name: action.payload.name,\n                id: action.payload.id,\n            }\n        }\n    }\n\n);\n\nexport default userReducer;","import {\n    createSlice,\n    combineReducers,\n    createSelector,\n} from '@reduxjs/toolkit';\nimport {\n    CAMPAING_TYPES,\n    LOCALE_DEFAULT,\n    LOCALE_EN,\n    LOCALE_RU,\n    MEDIA_IMAGE,\n} from '../../constants';\n\nconst dataSlice = createSlice({\n    name: 'editCampaign/data',\n    initialState: {\n        name: {\n            [LOCALE_EN]: '',\n            [LOCALE_RU]: '',\n        },\n        nameLocale: LOCALE_DEFAULT,\n        campaignType: CAMPAING_TYPES.EDUCATION,\n        descriptionLocale: LOCALE_DEFAULT,\n        description: {\n            [LOCALE_EN]: '',\n            [LOCALE_RU]: '',\n        },\n        avatar: undefined,\n        goalFinishDate: new Date(),\n        goalSum: '',\n        mediaContent: {\n            newElem: {\n                type: MEDIA_IMAGE,\n                url: '',\n                position: 0,\n            },\n            elems: {},\n            elemsOrder: [],\n        },\n        rewards: {\n            locale: [LOCALE_DEFAULT],\n            newElem: {\n                [LOCALE_RU]: {\n                    name: '',\n                    description: '',\n                },\n                [LOCALE_EN]: {\n                    name: '',\n                    description: '',\n                },\n                cost: 0,\n            },\n            rewards: {},\n            rewardOrder: [],\n        },\n    },\n    reducers: {\n        setName(state, action) {\n            state.name[state.nameLocale] = action.payload;\n        },\n        setCampaignType(state, action) {\n            state.campaignType = action.payload;\n        },\n        setNameLocale(state, action) {\n            state.nameLocale = action.payload;\n        },\n        setDescriptionLocale(state, action) {\n            state.descriptionLocale = action.payload;\n        },\n        setDescription(state, action) {\n            state.description[state.descriptionLocale] = action.payload;\n        },\n        setAvatar(state, action) {\n            state.avatar = action.payload;\n        },\n        setGoalFinishDate(state, action) {\n            state.goalFinishDate = action.payload;\n        },\n        setGoalSum(state, action) {\n            if (/^[\\d]*$/g.test(action.payload)) {\n                state.goalSum = action.payload;\n            }\n        },\n        setMediaContentNewElemType: (state, action) => {\n            state.mediaContent.newElem.type = action.payload;\n        },\n        setMediaContentNewElemUrl: (state, action) => {\n            state.mediaContent.newElem.url = action.payload;\n        },\n        setMediaContentNewElemPosition: (state, action) => {\n            const maxLen = state.mediaContent.elemsOrder.length;\n\n            if (maxLen < action.payload) {\n                state.mediaContent.newElem.position = maxLen;\n            } else if (action.payload < 0) {\n                state.mediaContent.newElem.position = 0;\n            } else {\n                state.mediaContent.newElem.position = action.payload;\n            }\n        },\n        addMediaContent: (state, action) => {\n            const { url, position, type } = state.mediaContent.newElem;\n\n            state.mediaContent.elems = {\n                ...state.mediaContent.elems,\n                [url]: {\n                    type: type,\n                    url: url,\n                },\n            }\n            state.mediaContent.elemsOrder = [\n                ...state.mediaContent.elemsOrder.slice(0, position),\n                url,\n                ...state.mediaContent.elemsOrder.slice(position),\n            ]\n        },\n        clearMediaContentNewElem: (state, action) => {\n            state.mediaContent.newElem = {\n                type: MEDIA_IMAGE,\n                url: '',\n                position: 0,\n            }\n        },\n        removeMediaContent: (state, action) => {\n            const elems = { ...state.mediaContent.elems };\n            let position = 0;\n\n            delete elems[action.payload];\n            state.mediaContent.elems = elems;\n            state.mediaContent.elemsOrder.forEach((cur, i) => {\n                if (cur === action.payload) {\n                    position = i\n                }\n            });\n            state.mediaContent.elemsOrder = [\n                ...state.mediaContent.elemsOrder.slice(0, position),\n                ...state.mediaContent.elemsOrder.slice(position + 1),\n            ];\n        },\n        changeMediaContentPosition: (state, action) => {\n            const newPosition = action.payload.position;\n            const reqUrl = action.payload.url;\n            const elems = [...state.mediaContent.elemsOrder];\n\n            if (newPosition >= 0 && newPosition < elems.length) {\n                let oldPosition;\n                let buf;\n\n                elems.forEach((cur, i) => {\n                    if (cur === reqUrl) {\n                        oldPosition = i;\n                    }\n                });\n                buf = elems[newPosition];\n                elems[newPosition] = elems[oldPosition];\n                elems[oldPosition] = buf;\n                state.mediaContent.elemsOrder = elems;\n            }\n        },\n        setRewardsLocale: (state, action) => {\n            state.rewards.locale = action.payload;\n        },\n        setRewardsNewElemName: (state, action) => {\n            const locale = state.rewards.locale;\n\n            state.rewards.newElem[locale].name = action.payload;\n        },\n        setRewardsNewElemDescription: (state, action) => {\n            const locale = state.rewards.locale;\n\n            state.rewards.newElem[locale].description = action.payload;\n        },\n        setRewardsNewElemCost: (state, action) => {\n            const cost = action.payload;\n\n            if (cost > -1) {\n                state.rewards.newElem.cost = action.payload;\n            }\n        },\n        addReward: (state) => {\n            const rewards = state.rewards;\n            const id = rewards.newElem[LOCALE_EN].name || rewards.newElem[LOCALE_RU].name;\n\n            if (id && !(rewards.rewards[id])) {\n                state.rewards.rewards = {\n                    ...rewards.rewards,\n                    [id]: {\n                        ...rewards.newElem,\n                    },\n                }\n                state.rewards.rewardOrder.push(id);\n            }\n        },\n        changeRewardPosition: (state, action) => {\n            const { id, position } = action.payload;\n            const order = [...state.rewards.rewardOrder];\n            const maxLen = order.length;\n            let oldPosition;\n            let buff;\n\n            if ((position < maxLen) && (position >= 0)) {\n                for (let i = 0; i < maxLen; i++) {\n                    if (order[i] === id) {\n                        oldPosition = i;\n                        break;\n                    }\n                }\n                buff = order[oldPosition];\n                order[oldPosition] = order[position];\n                order[position] = buff;\n                state.rewards.rewardOrder = order;\n            }\n        },\n        removeReward: (state, action) => {\n            const id = action.payload;\n            let order = [...state.rewards.rewardOrder];\n            let rewards = { ...state.rewards.rewards };\n            const position = order.findIndex((value) => {\n                return id === value;\n            });\n\n            delete rewards[id];\n            if (position >= 0) {\n                order = [\n                    ...order.slice(0, position),\n                    ...order.slice(position+1),\n                ];\n            }\n            state.rewards.rewards = rewards;\n            state.rewards.rewardOrder = order;\n        }, \n        editReward: (state, action) => {\n            const id = action.payload;\n            const reward = state.rewards.rewards[id];\n            state.rewards.newElem.cost = reward.cost;\n            state.rewards.newElem[LOCALE_RU] = {...reward[LOCALE_RU]};\n            state.rewards.newElem[LOCALE_EN] = {...reward[LOCALE_EN]};\n        },\n    }\n});\n\nconst editCampaignSelector = state => state.editCampaign;\nconst dataSelector = createSelector(\n    editCampaignSelector,\n    (state) => state.data,\n);\nconst nameSelector = createSelector(\n    dataSelector,\n    (data) => data.name[data.nameLocale],\n);\nconst campaignTypeSelector = createSelector(\n    dataSelector,\n    (data) => data.campaignType,\n);\nconst nameLocaleSelector = createSelector(\n    dataSelector,\n    (data) => data.nameLocale,\n);\nconst descriptionLocaleSelector = createSelector(\n    dataSelector,\n    (data) => data.descriptionLocale,\n);\nconst descriptionSelector = createSelector(\n    dataSelector,\n    (data) => data.description[data.descriptionLocale],\n);\nconst avatarSelector = createSelector(\n    dataSelector,\n    (data) => data.avatar,\n);\nconst goalFinishDateSelector = createSelector(\n    dataSelector,\n    (data) => data.goalFinishDate,\n);\nconst goalSumSelector = createSelector(\n    dataSelector,\n    (data) => data.goalSum,\n);\nconst mediaContentSelector = createSelector(\n    dataSelector,\n    (data) => data.mediaContent,\n);\nconst mediaContentNewElemSelector = createSelector(\n    mediaContentSelector,\n    (content) => content.newElem,\n);\nconst mediaContentNewElemTypeSelector = createSelector(\n    mediaContentNewElemSelector,\n    (elem) => elem.type,\n);\nconst mediaContentNewElemUrlSelector = createSelector(\n    mediaContentNewElemSelector,\n    (elem) => elem.url,\n);\nconst mediaContentNewElemPositionSelector = createSelector(\n    mediaContentNewElemSelector,\n    (elem) => elem.position,\n);\nconst mediaContentElemsSelector = createSelector(\n    mediaContentSelector,\n    (content) => content.elems,\n);\nconst mediaContentElemsOrderSelector = createSelector(\n    mediaContentSelector,\n    (content) => content.elemsOrder,\n);\nconst rewardsSelector = createSelector(\n    dataSelector,\n    (data) => data.rewards,\n);\nconst rewardsNewElemSelector = createSelector(\n    rewardsSelector,\n    (rewards) => {\n        const newElem = rewards.newElem;\n        return {\n            cost: newElem.cost,\n            ...newElem[rewards.locale]\n        }\n    },\n);\nconst rewardsLocale = createSelector(\n    rewardsSelector,\n    (rewards) => rewards.locale,\n);\nconst rewardsListSelector = createSelector(\n    rewardsSelector,\n    (rewards) => {\n        return rewards.rewardOrder.map((id) => {\n            const locale = rewards.locale;\n            const reward = rewards.rewards[id];\n\n            return {\n                id: id,\n                cost: reward.cost,\n                ...reward[locale],\n            }\n        });\n    },\n)\n\nexport const selectors = {\n    name: nameSelector,\n    campaignType: campaignTypeSelector,\n    nameLocale: nameLocaleSelector,\n    descriptionLocale: descriptionLocaleSelector,\n    description: descriptionSelector,\n    avatar: avatarSelector,\n    goalFinishDate: goalFinishDateSelector,\n    goalSum: goalSumSelector,\n    mediaContent: mediaContentSelector,\n    mediaContentNewElemType: mediaContentNewElemTypeSelector,\n    mediaContentNewElemUrl: mediaContentNewElemUrlSelector,\n    mediaContentNewElemPosition: mediaContentNewElemPositionSelector,\n    mediaContentElems: mediaContentElemsSelector,\n    mediaContentElemsOrder: mediaContentElemsOrderSelector,\n    rewardsNewElem: rewardsNewElemSelector,\n    rewardsLocale: rewardsLocale,\n    rewards: rewardsListSelector,\n}\n\nexport const actions = {\n    ...dataSlice.actions,\n}\n\nexport default combineReducers({\n    data: dataSlice.reducer,\n});","import { createSlice } from '@reduxjs/toolkit';\nimport { LOCALE_DEFAULT } from '../../constants';\n\nconst locale = createSlice({\n    name: 'locale',\n    initialState: {\n        locale: LOCALE_DEFAULT\n    },\n    reducers: {\n        setLocale: (state, action)  => {\n            state.locale = action.payload;\n        }\n    }\n});\n\nexport const actions = {\n    ...locale.actions\n}\n\nexport const selectors = {\n    locale: (state) => state.locale.locale,\n}\n\nexport default locale.reducer;","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport thunk from 'redux-thunk';\nimport mainMenuReducer from './mainMenu/reducer';\nimport userReducer from './user/reducer';\nimport campaignReducer from './campaign/reducer';\nimport editCampaignReducer from './editCampaign/reducer';\nimport localeReducer from './locale/reducer';\n\nvar store = configureStore({\n    reducer: {\n        mainMenu: mainMenuReducer,\n        user: userReducer,\n        campaign: campaignReducer,\n        editCampaign: editCampaignReducer,\n        locale: localeReducer,\n    }, \n    middleware: [...getDefaultMiddleware(), thunk]\n})\n\nexport default store;","import { useState, useEffect, useCallback } from 'react';\nimport store from '../store/configure';\nimport { selectors } from '../store/locale/reducer';\n\nexport function useLocale() {\n    const [ locale, setLocale ] = useState(selectors.locale(store.getState()));\n    const handleChange = useCallback(\n        () => {\n            const newLocale = selectors.locale(store.getState());\n\n            if (locale !== newLocale) {\n                setLocale(newLocale)\n            }\n        },\n        [locale],\n    )\n\n    useEffect(() => {\n        const unsubscribe = store.subscribe(handleChange);\n        return () => {\n            unsubscribe();\n        }\n    }, [handleChange]);\n\n    return locale;\n}","import React from 'react';\nimport Editor from 'react-simplemde-editor';\nimport 'easymde/dist/easymde.min.css';\n\nexport default function ({\n    onChange,\n    value,\n    id,\n}) {\n    return (\n        <Editor\n            id={id}\n            value={value}\n            onChange={onChange}\n            options={{\n                toolbar: [\n                    'bold', \n                    'italic',\n                    'heading',\n                    '|',\n                    'quote',\n                    'ordered-list',\n                    'unordered-list',\n                    '|',\n                    'link',\n                    'image',\n                ],\n            }}\n        />\n    );\n}","import {\n    LOCALE_EN,\n    LOCALE_RU,\n} from './constants';\n\nexport const LOCALE_NAME = {\n    [LOCALE_EN]: 'English',\n    [LOCALE_RU]: 'Русский',\n}\n\nexport default {\n    LOCALE_NAME: LOCALE_NAME,\n}","import React from 'react';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { LOCALE_NAME } from '../../shareLocale';\n\nexport default function ({\n    value,\n    onChange,\n    id, \n    name,\n    fullWidth,\n}) {\n    return (\n        <Select\n            id={id}\n            name={name}\n            value={value}\n            onChange={onChange}\n            fullWidth={fullWidth}\n        >\n            {Object.keys(LOCALE_NAME).map((value) => {\n                const label = LOCALE_NAME[value];\n\n                return (\n                    <MenuItem key={value} value={value}>\n                        {label}\n                     </MenuItem>\n                );\n            })}\n        </Select>\n    );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport SelectLocale from '../selectLocale/selectLocale';\n\nexport default function ({\n    text,\n    locale,\n    onTextChange,\n    onLocaleChange,\n    nameText,\n    nameLocale,\n    textLabel,\n}) {\n    return (\n        <Grid \n            container\n            alignItems='flex-end'\n            spacing={1}\n        >\n            <Grid\n                item\n                xs={9}\n            >\n                <TextField\n                    name={nameText}\n                    fullWidth\n                    label={textLabel}\n                    value={text}\n                    onChange={e => onTextChange(e.target.value)}\n                />\n            </Grid>\n            <Grid\n                item\n                xs={3}\n            >\n                <SelectLocale\n                    name={nameLocale}\n                    value={locale}\n                    onChange={e => onLocaleChange(e.target.value)}\n                    fullWidth\n                />\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport ImagePreviewPlugin from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\n\nregisterPlugin(ImagePreviewPlugin);\n\nexport default function({\n    file,\n    onUpdate,\n}) {\n    return (\n        <FilePond\n            allowMultiple={false}\n            files={file}\n        />\n\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport { LOCALE_RU, LOCALE_EN, LOCALE_DEFAULT } from '../../constants';\nimport { DatePicker } from '@material-ui/pickers';\n\nconst locales = {\n    [LOCALE_RU]: {\n        costLabel: 'Цель',\n        dateLabel: 'Дата',\n    },\n    [LOCALE_EN]: {\n        costLabel: 'Goal',\n        dateLabel: 'Date',\n    },\n}\n\nexport default function ({\n    locale = LOCALE_DEFAULT,\n    sum,\n    onSumChange,\n    date,\n    onDateChange\n}) {\n    const localeSet = locales[locale];\n\n    return (\n        <Grid\n            container\n            spacing={1}\n            alignItems='flex-end'\n        >\n            <Grid \n                item\n                xs={12}\n                sm={6}\n            >\n                <TextField\n                    fullWidth\n                    label={localeSet.costLabel}\n                    value={sum}\n                    onChange={e => onSumChange(e.target.value)}\n                    xs={12}\n                />\n            </Grid>\n            <Grid \n                item\n                xs={12}\n                sm={6}\n            >\n                <DatePicker \n                    value={date}\n                    onChange={onDateChange}\n                    fullWidth\n                />\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport { FilePond } from 'react-filepond';\n\nexport default function() {\n    return (\n        <FilePond />\n    );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Player from 'react-player'\n\nexport default function({\n    url,\n    onChange,\n}) {\n    return (\n        <Box>\n            <TextField \n                label='URL' \n                fullWidth \n                value={url}\n                onChange={e => onChange(e.target.value)}\n            />\n            <Player \n                url={url} \n                light\n                width='100%'\n            />\n        </Box>\n    );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Left from '@material-ui/icons/ChevronLeft';\nimport Right from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles({\n    text: {\n        maxWidth: '2em',\n    }\n});\n\nexport default function ({\n    value,\n    onChange,\n    label,\n}) {\n    const classes = useStyles();\n\n    return (\n        <Box>\n            <IconButton\n                onClick={() => onChange(value - 1)}\n            >\n                <Left />\n            </IconButton>\n            <TextField\n                classes={{ root: classes.text }}\n                value={value}\n                onChange={e => onChange(e.target.value)}\n                label={label}\n            />\n            <IconButton\n                onClick={() => onChange(value + 1)}\n            >\n                <Right />\n            </IconButton>\n        </Box>\n    );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Container from '@material-ui/core/Container'\nimport {\n    LOCALE_RU,\n    LOCALE_EN,\n    MEDIA_IMAGE,\n    MEDIA_VIDEO,\n} from '../../constants';\nimport ImageForm from '../mediaContentImageForm/mediaContentImageForm';\nimport VideoForm from '../mediaContentVideoForm/mediaContentVideoForm';\nimport Grid from '@material-ui/core/Grid';\nimport PositionInput from '../inputWithIncrementButtons/inputWithIncrementButtons';\nimport Button from '@material-ui/core/Button';\nimport { useLocale } from '../../app/locale';\n\nconst locales = {\n    [LOCALE_RU]: {\n        image: 'Изображение',\n        video: 'Видео',\n        button: 'Добавить',\n    },\n    [LOCALE_EN]: {\n        image: 'Image',\n        video: 'Video',\n        button: 'Add'\n    },\n}\n\nfunction valueToMediaContent(value) {\n    switch (value) {\n        case 0: return MEDIA_IMAGE;\n        case 1: return MEDIA_VIDEO;\n        default: throw new Error(`Wrong value ${value}`);\n    }\n}\n\nfunction mediaContentToValue(content) {\n    switch (content) {\n        case MEDIA_IMAGE: return 0;\n        case MEDIA_VIDEO: return 1;\n        default: throw new Error(`Wrong media content ${content}`);\n    }\n}\n\nfunction TabContent(props) {\n    const { type, ...rest } = props;\n    switch (type) {\n        case MEDIA_IMAGE: return <ImageForm {...rest} />;\n        case MEDIA_VIDEO: return <VideoForm {...rest} />;\n        default: return <div></div>\n    }\n}\n\nexport default function ({\n    type = MEDIA_IMAGE,\n    onChangeType,\n    url,\n    onChangeUrl,\n    position,\n    onChangePosition,\n    onAdd,\n}) {\n    const locale = useLocale();\n    const localeSet = locales[locale];\n\n    return (\n        <Box>\n            <Tabs\n                value={mediaContentToValue(type)}\n                onChange={(_, value) => {\n                    onChangeType(valueToMediaContent(value));\n                }}\n                fullWidth\n                centered\n            >\n                <Tab label={localeSet.image} />\n                <Tab label={localeSet.video} />\n            </Tabs>\n            <Container>\n                <TabContent\n                    type={type}\n                    url={url}\n                    onChange={onChangeUrl}\n                />\n                <Grid\n                    container\n                    direction='column'\n                    alignItems='center'\n                    spacing={1}\n                >\n                    <Grid\n                        item\n                    >\n                        <PositionInput\n                            value={position}\n                            onChange={onChangePosition}\n                            label='Position'\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            variant='contained'\n                            color='primary'\n                            onClick={onAdd}\n                        >\n                            {localeSet.button}\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Box >\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Box from '@material-ui/core/Box';\nimport ReactPlayer from 'react-player';\nimport {\n    MEDIA_IMAGE,\n    MEDIA_VIDEO,\n    LOCALE_RU,\n    LOCALE_EN,\n} from '../../constants';\nimport Button from '@material-ui/core/Button';\nimport { useLocale } from '../../app/locale';\nimport IconButton from '@material-ui/core/IconButton';\nimport Left from '@material-ui/icons/ChevronLeft';\nimport Right from '@material-ui/icons/ChevronRight';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    card: {\n        width: '15em',\n    }\n})\n\nconst locales = {\n    [LOCALE_RU]: {\n        delete: 'Удалить',\n    },\n    [LOCALE_EN]: {\n        delete: 'Remove',\n    },\n}\n\nfunction Image({\n    url,\n}) {\n    return (\n        <Box>\n            <img src={url} alt='elem' />\n        </Box>\n    );\n}\n\nfunction Video({\n    url,\n}) {\n    return (\n        <Box>\n            <ReactPlayer\n                url={url}\n                light\n                width='100%'\n            />\n        </Box>\n    );\n}\n\nfunction Elem({\n    type,\n    url,\n    onChangePosition,\n    position,\n    onDelete,\n}) {\n    const locale = useLocale();\n    const localeSet = locales[locale];\n    const classes = useStyles();\n\n    let Component;\n    switch (type) {\n        case MEDIA_IMAGE:\n            Component = Image;\n            break;\n        case MEDIA_VIDEO:\n            Component = Video;\n            break;\n        default: throw Error(`Wrong media type ${type}`);\n    }\n\n    return (\n        <Grid\n            item\n        >\n            <Grid container alignItems='center' >\n                <Grid item>\n                    <IconButton onClick={() => onChangePosition(position - 1)}>\n                        <Left />\n                    </IconButton>\n                </Grid>\n                <Grid item>\n                    <Card className={classes.card}>\n                        <Component url={url} />\n                        <Grid\n                            container\n                            justify='space-around'\n                        >\n                            <Grid item>\n                                <Button\n                                    color='primary'\n                                    onClick={onDelete}\n                                >\n                                    {localeSet.delete}\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item>\n                    <IconButton onClick={() => onChangePosition(position + 1)}>\n                        <Right />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default function ({\n    value,\n    valueOrder,\n    onChangePosition,\n    onDelete,\n}) {\n    return (\n        <Grid\n            container\n            direction='flex-start'\n            alignItems='center'\n            spacing={1}\n        >\n            {valueOrder ? valueOrder.map((url, i) => {\n                return (\n                    <Elem\n                        key={url}\n                        url={url}\n                        type={value[url].type}\n                        position={i}\n                        onChangePosition={(position) => {\n                            onChangePosition(url, position);\n                        }}\n                        onDelete={() => onDelete(url)}\n                    />\n                );\n            }) : <div />}\n        </Grid>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MediaContentForm from '../mediaContentForm/mediaContentForm';\nimport MediaContentList from '../mediaContentList/mediaContentList';\n\nexport default function({\n    newElemType,\n    onChangeNewElemType,\n    newElemUrl,\n    onChangeNewElemUrl,\n    newElemPosition,\n    onChangeNewElemPosition,\n    onChangePosition,\n    onDelete,\n    onAdd,\n    elems,\n    elemsOrder,\n}) {\n    return (\n        <Grid \n            container\n            spacing={1}\n        >\n            <Grid \n                item\n                sm={4}\n                xs={12}\n            >\n                <MediaContentForm \n                    type={newElemType}\n                    onChangeType={onChangeNewElemType}\n                    url={newElemUrl}\n                    onChangeUrl={onChangeNewElemUrl}\n                    position={newElemPosition}\n                    onChangePosition={onChangeNewElemPosition}\n                    onAdd={onAdd}\n                />\n            </Grid>\n            <Grid \n                item\n                sm={8}\n                xs={12}\n            >\n                <MediaContentList \n                    onChangePosition={onChangePosition}\n                    onDelete={onDelete}\n                    value={elems}\n                    valueOrder={elemsOrder}\n                />\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Markdown from 'react-simplemde-editor';\nimport Grid from '@material-ui/core/Grid';\nimport { useLocale } from '../../app/locale';\nimport { LOCALE_RU, LOCALE_EN } from '../../constants';\nimport Button from '@material-ui/core/Button';\n\nconst locales = {\n    [LOCALE_RU]: {\n        name: 'Название',\n        cost: 'Стоимость',\n        add: 'Добавить',\n    },\n    [LOCALE_EN]: {\n        name: 'Name',\n        cost: 'Cost',\n        add: 'Add',\n    },\n}\n\nexport default function ({\n    name,\n    description,\n    cost,\n    onChange,\n    onAdd,\n}) {\n    const locale = locales[useLocale()];\n\n    return (\n        <Grid\n            container\n            spacing={1}\n            justify='space-around'\n        >\n            <Grid\n                item\n                xs={12}\n            >\n                <TextField\n                    label={locale.name}\n                    value={name}\n                    onChange={e => onChange('name', e.target.value)}\n                    fullWidth\n                />\n            </Grid>\n            <Grid\n                item\n                xs={12}\n            >\n                <Markdown\n                    value={description}\n                    onChange={value => onChange('description', value)}\n                />\n            </Grid>\n            <Grid\n                item\n                xs={12}\n            >\n                <TextField\n                    label={locale.cost}\n                    value={cost}\n                    onChange={e => onChange('cost', e.target.value)}\n                    fullWidth\n                />\n            </Grid>\n            <Grid\n                item\n                xs={4}\n            >\n                <Button \n                    variant='contained'\n                    color='primary'\n                    onClick={onAdd}\n                >\n                    {locale.add}\n                </Button>\n            </Grid>\n        </Grid>\n    );\n}","import React, { useCallback } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Left from '@material-ui/icons/ChevronLeft';\nimport Right from '@material-ui/icons/ChevronRight';\nimport Reward from '../reward/reward';\nimport Edit from '@material-ui/icons/Edit';\nimport Close from '@material-ui/icons/Close';\n\nfunction RewardWrapper({\n    name,\n    description,\n    cost,\n    id,\n    onDelete,\n    onChangePosition,\n    position,\n    onEdit,\n}) {\n    const handleChangePosition = useCallback(\n        (position) => {\n            onChangePosition(id, position);\n        }, [id, onChangePosition]\n    );\n\n    return (\n        <Grid\n            item\n            sm={4}\n            xs={12}\n            container\n            alignItems='flex-start'\n            wrap='nowrap'\n        >\n            <Grid\n                item\n                xs={2}\n                container\n                direction='column'\n            >\n                <IconButton\n                    onClick={_ => onEdit(id)}\n                >\n                    <Edit />\n                </IconButton>\n                <IconButton\n                    onClick={_ => { handleChangePosition(position - 1) }}\n                >\n                    <Left />\n                </IconButton>\n            </Grid>\n            <Grid\n                item\n                xs={8}\n            >\n                <Reward\n                    label={name}\n                    description={description}\n                    cost={cost}\n                />\n            </Grid>\n            <Grid\n                item\n                xs={2}\n                container\n                direction='column'\n                alignItems='flex-start'\n                wrap='nowrap'\n            >\n                <Grid item>\n                    <IconButton\n                        onClick={_ => { onDelete(id) }}\n                    >\n                        <Close />\n                    </IconButton>\n                </Grid>\n                <Grid item>\n                    <IconButton\n                        onClick={_ => { handleChangePosition(position + 1) }}\n                    >\n                        <Right />\n                    </IconButton>\n                </Grid>\n            </Grid>\n            <Grid\n                item\n                xs={6}\n            >\n\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default function ({\n    rewards,\n    onChangePosition,\n    onDelete,\n    onEdit,\n}) {\n    return (\n        <Grid\n            container\n            spacing={2}\n        >\n            {rewards ? rewards.map((reward, i) => {\n                return (\n                    <RewardWrapper\n                        key={reward.name}\n                        position={i}\n                        {...reward}\n                        onChangePosition={onChangePosition}\n                        onDelete={onDelete}\n                        onEdit={onEdit}\n                    />\n                );\n            }) : <div />}\n        </Grid>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport InputReward from '../inputReward/inputReward';\nimport Reward from '../reward/reward';\nimport Typography from '@material-ui/core/Typography';\nimport { useLocale } from '../../app/locale';\nimport { LOCALE_RU, LOCALE_EN } from '../../constants';\nimport RewardList from '../editRewardList/editRewardList';\nimport SelectLocale from '../selectLocale/selectLocale';\n\nconst locales = {\n    [LOCALE_RU]: {\n        label: 'Награды',\n    },\n    [LOCALE_EN]: {\n        label: 'Rewards',\n    },\n}\n\nexport default function ({\n    newElem,\n    onChangeNewElem,\n    locale,\n    onChangeLocale,\n    rewards, \n    onAdd,\n    onChangePosition,\n    onDelete,\n    onEdit,\n}) {\n    const localeSet = locales[useLocale()];\n\n    return (\n        <Grid\n            container\n            spacing={1}\n        >\n            <Grid\n                item\n                xs={12}\n                sm={12}\n                container\n                spacing={1}\n                alignItems='center'\n            >\n                <Grid item>\n                    <Typography variant='h5'>\n                        {localeSet.label}\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <SelectLocale \n                        value={locale}\n                        onChange={e => onChangeLocale(e.target.value)}\n                    />\n                </Grid>\n            </Grid>\n            <Grid\n                item\n                sm={6}\n                xs={12}\n            >\n                <InputReward\n                    {...newElem}\n                    onChange={onChangeNewElem}\n                    onAdd={onAdd}\n                />\n            </Grid>\n            <Grid\n                item\n                sm={6}\n                xs={12}\n                container\n                direction='column'\n                justify='space-around'\n            >\n                <Grid item>\n                    <Reward\n                        label={newElem.name}\n                        description={newElem.description}\n                        cost={newElem.cost}\n                    />\n                </Grid>\n            </Grid>\n            <Grid \n                item\n                xs={12}\n            >\n                <RewardList \n                    rewards={rewards}\n                    onChangePosition={onChangePosition}\n                    onDelete={onDelete}\n                    onEdit={onEdit}\n                />\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport { CAMPAING_TYPES as CAMPAING_TYPES_RU } from '../../ruRU';\nimport { CAMPAING_TYPES as CAMPAING_TYPES_EN } from '../../enUS';\nimport { LOCALE_RU, LOCALE_EN } from '../../constants';\nimport { useLocale } from '../../app/locale';\nimport MarkdownEditor from '../markdownEditor/markdownEditor';\nimport SelectLocale from '../selectLocale/selectLocale';\nimport Markdown from 'react-markdown';\nimport TextWithLocale from '../textFieldWithSelectLocale/textFieldWithSelectLocale';\nimport ImageUpload from '../imageUpload/imageUpload';\nimport EditGoal from '../editGoal/editGoal';\nimport EditMediaContent from '../editMediaContent/editMediaContent';\nimport EditRewards from '../editRewards/editRewards';\nimport Button from '@material-ui/core/Button';\n\nconst locales = {\n    [LOCALE_RU]: {\n        name: 'Название',\n        header: 'Создайте вашу новую компанию!',\n        campaignTypes: CAMPAING_TYPES_RU,\n        campaignTypeLabel: 'Категория',\n        descriptionLabel: 'Описание',\n        avatarLabel: 'Аватар',\n        goalLabel: 'Цель',\n        mediaContentLabel: 'Содержание карусели',\n        applyButton: 'Отправить',\n        cancelButton: 'Отменить',\n    },\n    [LOCALE_EN]: {\n        name: 'Name',\n        header: 'Create you new company!',\n        campaignTypes: CAMPAING_TYPES_EN,\n        campaignTypeLabel: 'Category',\n        descriptionLabel: 'Description',\n        avatarLabel: 'Avatar',\n        goalLabel: 'Goal',\n        mediaContentLabel: 'Carousel content',\n        applyButton: 'Apply',\n        cancelButton: 'Cancel',\n    },\n}\n\nconst useStyles = makeStyles({\n    header: {\n        marginBottom: '1em',\n    },\n});\n\nfunction generateMenuItem(value) {\n    const items = Object.keys(value)\n        .map((elem) => ({ value: elem, label: value[elem] }));\n\n    return items.map((elem) => (\n        <MenuItem key={elem.value} value={elem.value}>\n            {elem.label}\n        </MenuItem>\n    ));\n}\n\nexport default function ({\n    name,\n    setName,\n    nameLocale,\n    setNameLocale,\n    campaignType,\n    setCampaignType,\n    description,\n    descriptionLocale,\n    setDescription,\n    setDescriptionLocale,\n    avatar,\n    setAvatar,\n    goalFinishDate,\n    goalSum,\n    setGoalFinishDate,\n    setGoalSum,\n    setMediaContentNewElemType,\n    mediaContent,\n    setMediaContentNewElemUrl,\n    setMediaContentNewElemPosition,\n    addMediaContent,\n    changeMediaContentPosition,\n    removeMediaContent,\n    onChangeRewardsNewElem,\n    rewardsNewElem,\n    onChangeRewardsLocale,\n    rewardsLocale,\n    addReward,\n    rewards,\n    onChangeRewardPosition,\n    onDeleteReward,\n    onEditReward,\n    onApply,\n    onCancel,\n}) {\n    const localeSet = locales[useLocale()];\n    const classes = useStyles();\n\n    return (\n        <Grid container>\n            <Grid\n                item\n                container\n                xs={12}\n                justify='space-around'\n                classes={{ root: classes.header }}\n            >\n                <Grid item>\n                    <Typography variant='h4'>\n                        {localeSet.header}\n                    </Typography>\n                </Grid>\n            </Grid>\n            <Grid\n                item\n                container\n                xs={12}\n                spacing={3}\n            >\n                <Grid\n                    item\n                    container\n                    sm={8}\n                    xs={12}\n                >\n                    <Grid\n                        container\n                        item\n                        xs={12}\n                        spacing={1}\n                    >\n                        <Grid\n                            item\n                            xs={12}\n                        >\n                            <TextWithLocale\n                                text={name}\n                                locale={nameLocale}\n                                onTextChange={setName}\n                                onLocaleChange={setNameLocale}\n                                textLabel={localeSet.name}\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            xs={12}\n                        >\n                            <FormControl\n                                fullWidth\n                            >\n                                <InputLabel\n                                    htmlFor='campaignTypeInput'\n                                >\n                                    {localeSet.campaignTypeLabel}\n                                </InputLabel>\n                                <Select\n                                    id='campaignTypeInput'\n                                    value={campaignType}\n                                    onChange={e => setCampaignType(e.target.value)}\n                                    fullWidth\n                                >\n                                    {generateMenuItem(localeSet.campaignTypes)}\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    sm={4}\n                    xs={12}\n                >\n                    <Grid\n                        item\n                        container\n                        justify='space-around'\n                    >\n                        <Grid item>\n                            <Typography variant='h5'>\n                                {localeSet.avatarLabel}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Grid item>\n                        <ImageUpload\n                            file={avatar}\n                            onUpdate={setAvatar}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    spacing={1}\n                    xs={12}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                    >\n                        <Typography variant='h5'>\n                            {localeSet.goalLabel}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                    >\n                        <EditGoal\n                            sum={goalSum}\n                            onSumChange={setGoalSum}\n                            date={goalFinishDate}\n                            onDateChange={setGoalFinishDate}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={12}\n                    spacing={1}\n                >\n                    <Grid\n                        item\n                        xs={12}\n                    >\n                        <Typography variant='h5'>\n                            {localeSet.mediaContentLabel}\n                        </Typography>\n                    </Grid>\n                    <Grid\n                        item\n                        xs={12}\n                    >\n                        <EditMediaContent \n                            newElemType={mediaContent.newElem.type}\n                            onChangeNewElemType={setMediaContentNewElemType}\n                            newElemUrl={mediaContent.newElem.url}\n                            onChangeNewElemUrl={setMediaContentNewElemUrl}\n                            newElemPosition={mediaContent.newElem.position}\n                            onChangeNewElemPosition={setMediaContentNewElemPosition}\n                            onChangePosition={changeMediaContentPosition}\n                            onDelete={removeMediaContent}\n                            onAdd={addMediaContent}\n                            elems={mediaContent.elems}\n                            elemsOrder={mediaContent.elemsOrder}\n                        />\n                    </Grid>\n                </Grid>\n                <Grid\n                    item\n                    container\n                    xs={12}\n                    spacing={1}\n                >\n                    <Grid\n                        item\n                        container\n                        spacing={1}\n                        xs={12}\n                    >\n                        <Grid\n                            item\n                        >\n                            <Typography variant='h5'>\n                                {localeSet.descriptionLabel}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                        >\n                            <SelectLocale\n                                id='selectDescriptionInputLocale'\n                                name='descriptionLocale'\n                                value={descriptionLocale}\n                                onChange={e => setDescriptionLocale(e.target.value)}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid\n                        container\n                        item\n                        xs={12}\n                    >\n                        <Grid\n                            item\n                            sm={6}\n                            xs={12}\n                        >\n                            <MarkdownEditor\n                                value={description}\n                                onChange={e => setDescription(e)}\n                            />\n                        </Grid>\n                        <Grid\n                            item\n                            sm={6}\n                            xs={12}\n                        >\n                            <Markdown source={description} />\n                        </Grid>\n                    </Grid>\n                    <Grid \n                        item\n                        xs={12}\n                    >\n                        <EditRewards \n                            onChangeNewElem={onChangeRewardsNewElem}\n                            newElem={rewardsNewElem}\n                            onChangeLocale={onChangeRewardsLocale}\n                            locale={rewardsLocale}\n                            onAdd={addReward}\n                            rewards={rewards}\n                            onChangePosition={onChangeRewardPosition}\n                            onDelete={onDeleteReward}\n                            onEdit={onEditReward}\n                        />\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid \n                item \n                container\n                justify='center'\n            >\n                <Grid item>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={onApply}\n                    >\n                        {localeSet.applyButton}\n                    </Button>\n                </Grid>\n                <Grid item>\n                    <Button\n                        cariant='contained'\n                        color='primary'\n                        onClick={onCancel}\n                    >\n                        {localeSet.cancelButton}\n                    </Button>\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n}","import React from 'react';\nimport { connect } from 'react-redux'\nimport EditCampaignComponent from '../../components/editCampaign/editCampaign';\nimport { actions, selectors } from '../../store/editCampaign/reducer';\n\nconst EditCampaign = (props) => {\n    return <EditCampaignComponent {...props} />\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        name: selectors.name(state),\n        campaignType: selectors.campaignType(state),\n        nameLocale: selectors.nameLocale(state),\n        description: selectors.description(state),\n        descriptionLocale: selectors.descriptionLocale(state),\n        avatar: selectors.avatar(state),\n        goalFinishDate: selectors.goalFinishDate(state),\n        goalSum: selectors.goalSum(state),\n        mediaContent: selectors.mediaContent(state),\n        rewardsNewElem: selectors.rewardsNewElem(state),\n        rewardsLocale: selectors.rewardsLocale(state),\n        rewards: selectors.rewards(state),\n    }\n}\n\nconst mapDispatchToPros = (dispatch) => {\n    return {\n        setName: (name) => {\n            dispatch(actions.setName(name));\n        },\n        setCampaignType: (cType) => {\n            dispatch(actions.setCampaignType(cType));\n        },\n        setNameLocale: (locale) => {\n            dispatch(actions.setNameLocale(locale));\n        },\n        setDescriptionLocale: (locale) => {\n            dispatch(actions.setDescriptionLocale(locale));\n        },\n        setDescription: (text) => {\n            dispatch(actions.setDescription(text));\n        },\n        setAvatar: (file) => {\n            dispatch(actions.setAvatar(file));\n        },\n        setGoalFinishDate: (date) => {\n            dispatch(actions.setGoalFinishDate(date));\n        },\n        setGoalSum: (cost) => {\n            dispatch(actions.setGoalSum(cost));\n        },\n        setMediaContentNewElemType: (type) => {\n            dispatch(actions.setMediaContentNewElemType(type));\n        },\n        setMediaContentNewElemUrl: (url) => {\n            dispatch(actions.setMediaContentNewElemUrl(url));\n        },\n        setMediaContentNewElemPosition: (position) => {\n            dispatch(actions.setMediaContentNewElemPosition(position));\n        },\n        addMediaContent: () => {\n            dispatch(actions.addMediaContent());\n            dispatch(actions.clearMediaContentNewElem());\n        },\n        removeMediaContent: (url) => {\n            dispatch(actions.removeMediaContent(url));\n        },\n        changeMediaContentPosition: (url, position) => {\n            dispatch(actions.changeMediaContentPosition({ url: url, position: position }));\n        },\n        onChangeRewardsNewElem: (type, value) => {\n            let act;\n\n            switch(type) {\n                case 'name':\n                    act = actions.setRewardsNewElemName(value);\n                    break;\n                case 'description':\n                    act = actions.setRewardsNewElemDescription(value);\n                    break;\n                case 'cost':\n                    act = actions.setRewardsNewElemCost(value);\n                    break;\n                default: return;\n            }\n            dispatch(act);\n        },\n        onChangeRewardsLocale: (locale) => {\n            dispatch(actions.setRewardsLocale(locale));\n        },\n        addReward: () => {\n            dispatch(actions.addReward());\n        },\n        onChangeRewardPosition: (id, position) => {\n            dispatch(\n                actions.changeRewardPosition({ \n                    id: id, \n                    position: position\n                })\n            );\n        },\n        onDeleteReward: (id) => {\n            dispatch(actions.removeReward(id));\n        },\n        onEditReward: (id) => {\n            dispatch(actions.editReward(id));\n            dispatch(actions.removeReward(id));\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToPros)(EditCampaign)","import React, { useEffect } from 'react';\r\nimport Header from './containers/header/header';\r\nimport Auth from './containers/auth/auth';\r\nimport { connect } from 'react-redux';\r\nimport { mainMenuIsOpen } from './store/mainMenu/selectors';\r\nimport { toggleMenu } from './store/mainMenu/actions';\r\nimport MainMenu from './components/mainMenu/mainMenu';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport auth0 from './app/auth';\r\nimport { login } from './store/user/actions';\r\nimport Campaign from './containers/campaign/campaign';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport EditCampaing from './containers/editCampaign/editCampaign';\r\nimport {\r\n    EDIT_CAMPAING_CREATE,\r\n    EDIT_CAMPAING_EDIT,\r\n} from './constants';\r\n\r\nconst useStyles = makeStyles({\r\n    mainContent: {\r\n        marginTop: '3em',\r\n    }\r\n})\r\n\r\nfunction App({\r\n    menuIsOpen,\r\n    dispatch,\r\n}) {\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        auth0.getTokenSilently()\r\n            .then(() => auth0.getUser().then(user => {\r\n                if (user) {\r\n                    dispatch(login(user.sub, user.name))\r\n                }\r\n            }))\r\n            .catch(err => console.log(err));\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                <Header pageName='main' />\r\n                <MainMenu\r\n                    isOpen={menuIsOpen}\r\n                    onClose={() => dispatch(toggleMenu())}\r\n                />\r\n                <Container className={classes.mainContent}>\r\n                    <Switch>\r\n                        <Route exact path='/'>\r\n\r\n                        </Route>\r\n                        <Route exact path='/auth'>\r\n                            <Auth />\r\n                        </Route>\r\n                        <Route exact path='/campaign/create'>\r\n                            <EditCampaing type={EDIT_CAMPAING_CREATE} />\r\n                        </Route>\r\n                        <Route exact path='/campaign/:id'>\r\n                            <Campaign />\r\n                        </Route>\r\n                    </Switch>\r\n                </Container>\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        menuIsOpen: mainMenuIsOpen(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/configure';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport Moment from '@date-io/moment';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <MuiPickersUtilsProvider utils={Moment}>\r\n        <App />\r\n      </MuiPickersUtilsProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}